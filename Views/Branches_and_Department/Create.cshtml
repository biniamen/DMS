@model ShareSysProd.Models.Branches_and_Department

@{
    ViewBag.Title = "Create Risk Event Subcategory";
}

@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        <div class="page-content-wrapper">
            <!-- BEGIN CONTENT BODY -->
            <div class="page-content">
                <!-- BEGIN PAGE HEAD-->
                <!-- END PAGE HEAD-->
                <!-- BEGIN PAGE BREADCRUMB -->
                <!-- Contact Form -->
                <div class="note note-success">
                    <h3>Branch and Department Lists</h3>

                </div>

                <div class="row">
                    <div class="col-md-12">
                        <!-- BEGIN VALIDATION STATES-->
                        <div class="portlet light portlet-fit portlet-form bordered">
                            <div class="portlet-title">
                                <div class="caption">
                                    <i class=" icon-layers font-green"></i>
                                    <span class="caption-subject font-green sbold uppercase">Add New Branch and Department</span>
                                </div>


                                <div class="portlet-body">
                                    <div class="form-horizontal">

                                        <hr />
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        <div class="form-group">
                                            <label class="control-label col-md-2 bold">Enter Branch Code</label>
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Branch_department_Code, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                                @Html.ValidationMessageFor(model => model.Branch_department_Code, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <label class="control-label col-md-2 bold">Branch Name</label>
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Branch_department_name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                                @Html.ValidationMessageFor(model => model.Branch_department_name, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group center">
                                            <div class="col-md-offset-2 col-md-10 ">
                                                <input type="submit" value="Save" class="btn green" />
                                            </div>
                                        </div>
                                    </div>
                                </div>




                            </div>
                        </div>
                    </div>



                </div>
            </div>

        </div>
    }*@
<div class="page-content-wrapper">
    <!-- BEGIN CONTENT BODY -->
    <div class="page-content">

        <form method="post" action="/Branches_and_Department/GetCustomerDetails">
            <label for="custNo">Customer Number:</label>
            <input type="text" id="custNo" name="custNo" required />
            <button type="submit">Submit</button>
        </form>

        <h2>Enter Customer Number</h2>
        <input type="text" id="custNo2" placeholder="Customer Number" />
        <button onclick="sendRequest()">Get Customer Details</button>

        <div id="result"></div>

    </div>
</div>



@*<script>
    function sendRequest() {
        var custNo = document.getElementById('custNo2').value;
        fetch('/Branches_and_Department/GetCustomerDetails2', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: `custNo=${encodeURIComponent(custNo)}`
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok: ' + response.statusText);
                }
                return response.json();  // Parse JSON only if the response was ok
            })
            .then(data => {
                document.getElementById('result').innerText = 'Customer Name: ' + data.name;
            })
            .catch(error => {
                console.error('Error:', error);
                document.getElementById('result').innerText = 'Failed to fetch data: ' + error;
            });
    }
</script>*@

<script>
    function sendRequest() {
    var custNo = document.getElementById('custNo2').value;
    fetch('/Branches_and_Department/GetCustomerDetails2', { // Replace 'YourControllerName' with the actual controller name
        method: 'POST',
        headers: {
            'Content-Type': 'application/x-www-form-urlencoded',
        },
        body: `custNo=${encodeURIComponent(custNo)}`
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok: ' + response.statusText);
        }
        return response.json();  // Parse JSON only if the response was ok
    })
    .then(data => {
        if(data.error) {
            document.getElementById('result').innerText = data.error;
        } else {
            document.getElementById('result').innerHTML = `
                Customer Name: ${data.Name}<br>
                Mobile Number: ${data.MobileNumber}<br>
                Customer Type: ${data.CustomerType}<br>
                Address Line 1: ${data.AddressLine1}<br>
                Staff Status: ${data.StaffStatus}<br>
                Branch Number: ${data.BranchNumber}
            `;
        }
    })
    .catch(error => {
        console.error('Error:', error);
        document.getElementById('result').innerText = 'Failed to fetch data: ' + error;
    });
}

</script>










